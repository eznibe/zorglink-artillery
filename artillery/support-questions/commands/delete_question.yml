config:
  target: 'https://lemonade.leersteun.lars-tst.school'
  phases:
    - duration: 1
      arrivalRate: 1  
      name: "Trajectory create commands"
  environments:
    tst:
      target: 'https://lemonade.leersteun.lars-tst.school'
      phases:
        - duration: 1
          arrivalRate: 1
      payload:
        path: '../../data/tst-questions-mongo.csv'
        fields:
          - 'question_id'
        skipHeader: true
        delimiter: ','    
    acc:
      target: 'https://lemonade.leersteun.lars-acc.school'
      phases:
        - duration: 10s
          arrivalRate: 50
      payload:
        - path: '../../data/acc-questions-mongo-1k.csv'
          fields:
            - 'question_id'
          skipHeader: true
          delimiter: ','
        - path: '../../data/acc-learning-support-centers.csv'
          fields:
            - 'learning_support_center_id'
            - 'name'
            - 'access_token' 
            - 'mongo_claims'
          skipHeader: true
          delimiter: ','    
  variables:
    access_token_: "{{ $env.ACCESS_TOKEN }}"
    mongo_claims_: "{{ $env.MONGO_CLAIMS }}"
  processor: '../../utils/response-logger.js'

scenarios:
  - name: "Create Support Question from CSV"
    weight: 100
    flow:
      - post:
          url: '/api/zorglink/zorglink-support-question/{{ question_id }}'
          headers:
              Content-Type: "application/json"
              Cookie: "access_token={{ access_token }}; mongo_claims={{ mongo_claims }}"
          json:
            _id: '{{ question_id }}'
            _corr: '{{ custom_uuid }}'
            _command: "delete"
            _type: "zorglink-support-question"
          beforeRequest: 'generateUuid' 
          # afterResponse: 'logResponse'
          expect:
            - statusCode: 
                - 200
                - 201
            - contentType: json