config:
  target: 'https://lemonade.leersteun.lars-acc.school'
  phases:
    - duration: 1
      arrivalRate: 1
      name: "Support question create commands"
  environments:
    tst:
      target: 'https://lemonade.leersteun.lars-tst.school'
      phases:
        - duration: 1
          arrivalRate: 1
      payload:
        path: '../../data/tst-questions-mongo.csv'
        fields:
          - 'question_id'
          - 'school_year' 
          - 'creation_date'
          - 'student_subscription_id'
          - 'verslag_id'
          - 'school_entity_id'
          - 'learning_support_center_id'
          - 'creator_id' 
        skipHeader: true
        delimiter: ','     
    acc:
      target: 'https://lemonade.leersteun.lars-acc.school'
      phases:
        - duration: 5
          arrivalRate: 20
      payload:
        path: '../../data/acc-questions-mongo.csv'
        fields:
          - 'question_id'
          - 'school_year' 
          - 'creation_date'
          - 'student_subscription_id'
          - 'verslag_id'
          - 'school_entity_id'
          - 'learning_support_center_id'
          - 'creator_id'
        skipHeader: true
        delimiter: ','
  variables:
    access_token: "{{ $env.ACCESS_TOKEN }}"
    mongo_claims: "{{ $env.MONGO_CLAIMS }}"
  processor: '../../utils/response-logger.js'

scenarios:
  - name: "Create Support Question from CSV"
    weight: 100
    flow:
      - post:
          url: '/api/zorglink/zorglink-support-question/{{ question_id }}'
          headers:
              Content-Type: "application/json"
              Cookie: "access_token={{ access_token }}; mongo_claims={{ mongo_claims }}"
          json:
            _id: '{{ question_id }}'
            _corr: '{{ custom_uuid }}'
            _command: "put"
            _type: "zorglink-support-question"
            questionText: 'LOAD_TEST'
            schoolText: 'LOAD_TEST'
            schoolYear: '{{ school_year }}'
            creationDate: '{{ creation_date }}'
            studentSubscriptionId: '{{ student_subscription_id }}'
            verslagId: '{{ verslag_id }}'
            schoolEntityId: '{{ school_entity_id }}'
            learningSupportCenterId: '{{ learning_support_center_id }}'
            creatorId: '{{ creator_id }}'
          # beforeRequest: 'logRequest'  
          beforeRequest: 'generateUuid' 
          afterResponse: 'logResponse'
          expect:
            - statusCode: 
                - 200
                - 201
            - contentType: json