config:
  target: 'https://lemonade.leersteun.lars-tst.school'
  processor: "../../utils/response-logger.js"
  phases:
    - duration: 1
      arrivalRate: 1
      name: "Care reception load"
  environments:
    tst:
      target: 'https://lemonade.leersteun.lars-tst.school'
      phases:
        - duration: 1
          arrivalRate: 1
      variables:
        learning_support_center_id_: "4126aba9-622d-4ada-98c3-2eb319793ec6"    
      payload:
        path: '../../data/secrets/tst-learning-support-centers.csv'
        fields:
          - 'learning_support_center_id'
          - 'name'
          - 'access_token' 
          - 'mongo_claims'
        skipHeader: true
        delimiter: ','  
    acc:
      target: 'https://lemonade.leersteun.lars-acc.school'
      phases:
        - duration: 1
          arrivalRate: 1
      payload:
        path: '../../data/secrets/acc-learning-support-centers.csv'
        fields:
          - 'learning_support_center_id'
          - 'name'
          - 'access_token' 
          - 'mongo_claims'
        skipHeader: true
        delimiter: ','
    prd:
      target: 'https://leersteun.lars.school'
      phases:
        - duration: '10m'
          arrivalRate: 30
          maxVusers: 5000
      payload:
        path: '../../data/secrets/prd-learning-support-centers.csv'
        fields:
          - 'learning_support_center_id'
          - 'name'
          - 'access_token' 
          - 'mongo_claims'
        skipHeader: true
        delimiter: ','

scenarios:
  - name: "Care reception load test"
    weight: 100
    flow:
      - post:
          url: "/api/query/care_reception/graphql"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ access_token }}"
          json:
            query: |
              query CareReception($filters: CareReceptionFilters) {
                careReception(filters: $filters) {
                  pageInfo {
                    hasNextPage
                    endCursor
                  }
                  totalCount
                  edges {
                    node {
                      id
                      createdAt
                      updatedAt
                      status
                      reception
                      receptionCategory
                      question {
                        id
                        createdAt
                        updatedAt
                        submitterId
                        title
                        content
                        status
                        answeredAt
                        answeredBy
                        careReceptionId
                        answerCount
                        userType
                        tags
                        source
                        metadata
                        trajectoryId
                        learning_support_center_id
                        answers {
                          id
                          createdAt
                          updatedAt
                          authorId
                          content
                          questionId
                          metadata
                          source
                          selectedAnswer
                          upVoteCount
                          downVoteCount
                          feedbackDiagnosis
                          feedbackDiagnosisImpact
                          feedbackImplementation
                          feedbackImplementationImpact
                          feedbackKnowledge
                          feedbackKnowledgeImpact
                        }
                      }
                    }
                  }
                }
              }
            variables:
              filters:
                learning_support_center_id: "{{ learning_support_center_id }}"
          capture:
            - json: "$.data.careReception.totalCount"
              as: "totalCount"
          expect:
            - statusCode: 200
            - hasProperty: "data.careReception"
